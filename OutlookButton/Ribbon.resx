<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="alex_click.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iCI3VJCgc5bWJKcStSsWJhkrFixBP//Z
</value>
  </data>
</root>